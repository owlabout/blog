{"title":"Cron-Jobs","metadata":{"slug":"cron","link":"/posts/2019/04/cron","dateString":"13.04.2019","date":"2019-04-13T00:00:00.000Z","author":"Lukas","thumbnail":"assets/55e4b392fa.svg","title":"Cron-Jobs","tags":["devops"],"file":"posts/devops/cron.md"},"html":"<div class=\"hero__container\"  style='--color-hero: #EEE857;'><p><img src=\"assets/55e4b392fa.svg\" alt=\"Owl showing a circular process\"></p>\n</div><h1>Cron-Jobs</h1>\n<div class=\"sticky__container\"><div><div class=\"sticky\"><pre><code class=\"language-bash\"> * * * * * <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span> auszuführender Befehl\n<span class=\"token comment\">#┬ ┬ ┬ ┬ ┬</span>\n<span class=\"token comment\">#│ │ │ │ │</span>\n<span class=\"token comment\">#│ │ │ │ └──── Wochentag (0-7, Sonntag ist 0 oder 7)</span>\n<span class=\"token comment\">#│ │ │ └────── Monat (1-12)</span>\n<span class=\"token comment\">#│ │ └──────── Tag (1-31)</span>\n<span class=\"token comment\">#│ └────────── Stunde (0-23)</span>\n<span class=\"token comment\">#└──────────── Minute (0-59)</span>\n</code></pre>\nCron-Job anlegen</div></div><div><blockquote>\n<p>Der Cron-Daemon dient der zeitbasierten Ausführung von Prozessen [...] um wiederkehrende Aufgaben – sogenannte Cronjobs – zu automatisieren. [<a href=\"https://de.wikipedia.org/wiki/Cron\">1</a>]</p>\n</blockquote>\n<p>Dabei definiert man in einer Datei Ausführungszeitpunkt(e) und den auszuführenden Befehl.\nGegebenenfalls kann man auch den Nutzer angeben, mit dessen Rechten der Befehl ausgeführt werden soll.</p>\n<p>Der Cron-Daemon liest Dateien in den <code>/etc/cron*</code>Verzeichnissen automatisch.\nÜblicherweise wird für jeden Cron-Job eine eigene Datei angelegt. Man könnte theoretisch auch mehrere Befehle zeilenweise in der selben Datei angeben. Beispielsweise um zusammengehörige Befehle zu gruppieren.</p>\n<p>Cronjobs können auch mit dem Befehl <code>(sudo) crontab -e</code> definiert werden.\nAllerdings erlaubt die Aufteilung auf Dateien einen besseren Überblick.</p>\n<p><code>crontab -u user -l</code> gibt die Cronjobs eines bestimmten Nutzers aus.</p>\n<p>Ein Beispiel für einen sinnvollen Cronjob ist die automatische Erneuerung von Letsencrypt SSL Zertifikaten:</p>\n<pre><code class=\"language-bash\"><span class=\"token number\">38</span> <span class=\"token number\">4</span> * * * root /opt/certbot-auto renew --post-hook <span class=\"token string\">\"systemctl reload nginx\"</span>\n<span class=\"token comment\"># Wird jede Nacht um 4:38 ausgeführt.</span>\n<span class=\"token comment\"># (Certbot erneuert Zertifikate nur falls sie bald auslaufen)</span>\n<span class=\"token comment\"># Der post-hook startet ggf. nach einem Update den nginx Server neu.</span>\n</code></pre>\n"}